NONE 
 -> 파이썬 자료형 중 하나
 -> 값이 없음을 표현하기 위해 None 타입이 존재
 -> 일반적으로 반환 값이 없는 함수에서 사용하기도 함

불린형(Boolean)이란?
 -> 논리 자료형으로 참과 거짓을 표현하는 자료형
 -> True 또는 False를 값으로 가짐
 -> 비교 / 논리 연산에서 활용됨

비교연산자
 -> 수학에서 등호와 부등호와 동일한 개념
 -> 주로 조건문에 사용되며 값을 비교할 때 사용
 -> 결과는 True / False 값을 리턴함

 논리연산자
  -> 여러 가지 조건이 있을 때
  -> 모든 조건을 만족하거나(and), 여러 조건 중 하나만 만족해도 될 때(or) 특정코드를 실행하고 싶을 때 사용
  -> 일반적으로 비교연산자와 함께 사용됨

  => 주의할 점 : Falsy -> False는 아니지만 False로 취급되는 다양한 값
  => 논리연산자도 우선순위 존재 not > and > or

컨테이너란?
 -> 여러 개의 값을 담을 수 있는 것(객체)으로, 서로 다른 자료형을 저잘할 수 있음
 -> 분류 - 순서가 있는 데이터 vs 순서가 없는 데이터

 컨테이너의 분류
  - 시퀀스형 : 리스트
            : 튜플
            : 레인지
  - 비시퀀스형 : 세트
              : 딕셔너리

리스트의 생성과 접근
 -> 리스트는 대괄호 혹은 list()를 통해 생성
  -> 파이썬에서는 어떠한 자료형도 저장할 수 있으며, 리스트 안에 리스트도 넣을 수 있음
  -> 생성된 이후 내용 변경이 가능 -> 가변 자료형
  -> 이러한 유연성 때문에 파이썬에서 가장 흔히 사용
 -> 순서가 있는 시퀀스로 인덱스를 통해 접근 가능
  -> 값에 대한 접근은 list[i]

튜플의 정의 
 -> 튜플은 여러 개의 값을 순서가 있는 구조로 저장하고 싶을 때 사용
  -> 리스트와의 차이점은 생성 후, 담고 있는 값 변경이 불가(불변자료형)
 -> 항상 소괄호 형태 사용

 => 주의사항
  -> 단일 항목의 경우 : 하나의 항목으로 구성된 튜플은 생성 시 값 뒤에 쉼표를 붙여야함
  -> 복수 항목의 경우 : 마지막 항목에 붙은 쉼표는 없어도 되지만, 넣는 것을 권장

Range의 정의
 -> 숫자의 시퀀스를 나타내기 위해 사용
 -> 주로 반복문과 함께 사용됨
 사용법 
  -> 기본형 : range(n)
      0 부터 n-1 까지의 숫자 시퀀스
  -> 범위 지정 : range(n, m)
      n 부터 m-1 까지의 숫자 시퀀스
  -> 범위 및 스텝 지정 : range(n, m, s)
      n 부터 m-1까지 s만큼 증가시키며 숫자 시퀀스

셋(Set)
 -> set이란 중복되는 요소가 없이, 순서에 상관없는 데이터들의 묶음
   -> 데이터의 중복을 허용하지 않기 때문에 중복되는 원소가 있다면 하나만 저장
   -> 순서가 없기 때문에 인덱스를 이용한 접근 불가능
 -> 수학에서의 집합을 표현한 컨테이너
   -> 집합 연산이 가능(여집합을 표현하는 연산자는 별도로 존재 x)
   -> 중복된 값이 존재하지 않음
 -> 담고 있는 요소를 삽입 변경, 삭제 가능 -> 가변자료형(mutable)
 -> {}중괄호 혹은 set()를 통해 생성
 
  set연산자
   ㅣ : 합집합
   &  : 교집합
   -  : 차집합
   ^  : 대칭차집합

딕셔너리
 -> 키-값(key-value) 쌍으로 이뤄진 자료형
 -> 딕셔너리의 키 
  -> key는 변경 불가능한 데이터만 활용 가능
    (string, integer, float, boolean, tuple, range)
 -> 각 키의 값 : 어떠한 형태든 관계 없음
 {}혹은 dict()로 생성

형변환
 -> 파이썬에서 데이터 형태는 서로 변환할 수 있음
 -> 암시적 형 변환(Implicit)
   -> 사용자가 의도하지 않고, 파이썬 내부적으로 자료형을 변환하는 경우
 -> 명시적 형 변환(Explicit)
   -> 사용자가 특정 함수를 활용하여 의도적으로 자료형을 변환하는 경우
   